name: QvPlugin Build Action - cmake

on: 
  push:
  release:
    types: [prereleased]

jobs:
  build:
    strategy:
      matrix:
        qt_version: [5.11.5]
        platform: [macos-11.0]
        arch: [arm64]
        include: 
          - platform: macos-11.0
            arch:  arm64
            cmackearch:  arm64
      fail-fast: false
        
    runs-on: ${{ matrix.platform }}
    env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Get Plugin Name
        id: get_name
        shell: bash
        run: echo ::set-output name=NAME::QvPlugin-TrojanGo
      - name: Checking out sources
        uses: actions/checkout@master
      - name: Install Python 3.7 version
        run: |
          export PATH="/usr/local/opt/python/libexec/bin:$PATH"
          brew install python
      - name: Restoring submodules
        run: git submodule update --init
# --------------------------------------------------------
      - name: macOS - ${{ matrix.qt_version }} - Generate Dependencies and Build
        shell: bash
        if: matrix.platform == 'macos-11.0'
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --parallel $(sysctl -n hw.logicalcpu)
# --------------------------------------------------------
      - name: macOS - ${{ matrix.qt_version }} - Uploading Artifact
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.get_name.outputs.NAME }}-${{ github.sha }}.macOS-${{ matrix.arch }}.qt${{ matrix.qt_version }}.so
          path: build/lib${{ steps.get_name.outputs.NAME }}.so
      - name: macOS - ${{ matrix.qt_version }} - Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        if: github.event_name == 'release' && matrix.platform == 'macos-latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/lib${{ steps.get_name.outputs.NAME }}.so
          asset_name: ${{ steps.get_name.outputs.NAME }}.${{ steps.get_version.outputs.VERSION }}.macOS-${{ matrix.arch }}.so
          tag: ${{ github.ref }}
          overwrite: true
